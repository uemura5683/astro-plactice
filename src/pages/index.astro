---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

import { getBlogs } from "../library/microcms";
const response = await getBlogs({ fields: ["id", "title", "image", "date"] });
import moment from "moment";

let setdate = function (str:any) {
    return moment(str).utc().format('YYYY-MM-DD');
};

---

<Layout title="Welcome to Astro.">
	<main>
		<h1><span class="text-gradient">Astro & microCMS</span></h1>
		<p class="instructions">
			Astro × microcms でブログサイトの練習をしています。
		</p>
		<ul role="list" class="link-card-grid">
			{
				response.contents.map((content: any) => (
					<Card
						href={content.id}
						title={content.title}
						image={content.image.url}
						data={setdate(content.date)}
					/>
				))
			}
		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: calc(50% - 0.5rem) 1fr;
		gap: 1rem;
		padding: 0;
	}
</style>
